import type { Credentials } from '@aws-sdk/client-sts';
import type { RequireExactlyOne, SetOptional } from 'type-fest';
import { AccessTokenFactory } from './access-token';
import type { AuthorizationScope } from './types/scope';
export interface SellingPartnerAuthParameters {
    clientId?: string;
    clientSecret?: string;
    refreshToken?: string;
    scopes?: AuthorizationScope[];
    accessKeyId?: string;
    secretAccessKey?: string;
    sessionToken?: string;
    region?: string;
    role?: {
        arn: string;
        sessionName?: string;
    };
}
/**
 * Class for simplify auth with Selling Partner API
 */
export declare class SellingPartnerApiAuth {
    readonly accessToken: AccessTokenFactory;
    private readonly _sts?;
    private readonly _accessKeyId;
    private readonly _secretAccessKey;
    private readonly _sessionToken?;
    constructor(parameters: RequireExactlyOne<SellingPartnerAuthParameters, 'refreshToken' | 'scopes'>);
    /**
     * Get AWS credentials from STS or user
     */
    getCredentials(): Promise<SetOptional<Credentials, 'Expiration' | 'SessionToken'>>;
}
export { SellingPartnerApiAuthError } from './error';
export { AuthorizationScope } from './types/scope';
