"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessTokenFactory = void 0;
const axios_1 = require("axios");
const error_1 = require("./error");
const axios_2 = require("./utils/axios");
class AccessTokenFactory {
    clientId;
    clientSecret;
    refreshToken;
    scopes;
    value;
    expirationDate;
    constructor(parameters) {
        this.clientId = parameters.clientId;
        this.clientSecret = parameters.clientSecret;
        this.refreshToken = parameters.refreshToken;
        this.scopes = parameters.scopes;
    }
    async get() {
        if (!this.value || (this.expirationDate && Date.now() >= this.expirationDate.getTime())) {
            const body = {
                client_id: this.clientId,
                client_secret: this.clientSecret,
                ...(this.refreshToken
                    ? {
                        grant_type: 'refresh_token',
                        refresh_token: this.refreshToken,
                    }
                    : {
                        grant_type: 'client_credentials',
                        scope: this.scopes.join(' '),
                    }),
            };
            try {
                const { data } = await axios_2.axios.post('/o2/token', body);
                const expiration = new Date();
                expiration.setSeconds(expiration.getSeconds() + data.expires_in);
                this.value = data;
                this.expirationDate = expiration;
            }
            catch (error) {
                if (error instanceof axios_1.AxiosError) {
                    throw new error_1.SellingPartnerApiAuthError(error);
                }
                throw error;
            }
        }
        return this.value.access_token;
    }
}
exports.AccessTokenFactory = AccessTokenFactory;
